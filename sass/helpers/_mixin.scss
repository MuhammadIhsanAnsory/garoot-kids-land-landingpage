@mixin va-relative($position: relative) {
    position: $position;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
}

@mixin va-absolute($position: absolute) {
    position: $position;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
}

@mixin va-fixed($position: fixed) {
    position: $position;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
}

@mixin transition($transition-property, $transition-time, $method) {
    -webkit-transition:$transition-property $transition-time $method;
    -moz-transition:$transition-property $transition-time $method;
    -ms-transition:$transition-property $transition-time $method;
    -o-transition:$transition-property $transition-time $method;
    transition:$transition-property $transition-time $method;
}

@mixin transform($property) {
     -moz-transform: $property;
       -o-transform: $property;
      -ms-transform: $property;
  -webkit-transform: $property;
          transform: $property;
}

@mixin border-radius($radius) {
	-webkit-border-radius:$radius;
	-moz-border-radius:$radius;
	border-radius:$radius;
}

// breakpoints
$breakpoints: (
    "phone":        400px,
    "phone-wide":   480px,
    "phablet":      560px,
    "tablet-small": 640px,
    "tablet":       768px,
    "tablet-wide":  1024px,
    "desktop":      1248px,
    "desktop-wide": 1440px
);
@mixin mq($width, $type: min) {
    @if map_has_key($breakpoints, $width) {
        $width: map_get($breakpoints, $width);
        @if $type == max {
            $width: $width - 1px;
        }
        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}

/* Ratio
  div {
    @include responsive-ratio(16,9);
  }
*/
@mixin responsive-ratio($x,$y, $pseudo: false) {
    $padding: unquote( ( $y / $x ) * 100 + '%' );
    @if $pseudo {
        &:before {
            @include pseudo($pos: relative);
            width: 100%;
            padding-top: $padding;
        }
    } @else {
        padding-top: $padding;
    }
}

@mixin grayscale() {
    filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/></filter></svg>#grayscale"); /* Firefox 10+ */
    filter: gray; /* IE6-9 */
    -webkit-filter: grayscale(98%); /* Chrome 19+ & Safari 6+ */
    -webkit-backface-visibility: hidden;  /* Fix for transition flickering */
}